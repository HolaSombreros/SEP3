@page "/ItemDetails/{id:int}"
@using SEP3UI.Data
@using System.Runtime.InteropServices.ComTypes
@using System.Security.Claims
@using SEP3Library.Models
@inject IItemService itemService
@inject IOrderService orderService
@inject ICustomerService customerService
@inject AuthenticationStateProvider authStateProvider

@if (item == null) {
    <h2>Loading</h2>
}
else {
    <div class="container">
        <div class="card row ">
            <div class="row border-top border-bottom">
                <div class="col-md-6">
                    <div class="img-responsive m-3">
                        <img src="@item.ImageName"/>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="pt-5 pl-5">
                        <h2 class="mb-4">
                            <div class="retroshd">@item.Name</div>
                        </h2>
                        <div>
                            <b>About:</b> @item.Description
                        </div>
                        <div class="mt-2">
                            <span>
                                <strong>Category:</strong>
                                <a rel="tag" href="#">@item.Category.Name</a>
                            </span>
                        </div>
                        @if (item.Category.Name.Equals("Book") && book != null) {
                            <div class="mt-2">
                                <span>
                                    <strong>Author:</strong>
                                    @foreach (Author author in book.Authors) {
                                        <a rel="tag" href="#">@author.FirstName @author.LastName</a>
                                    }
                                </span>
                            </div>
                            <div class="mt-2">
                                <span>
                                    <strong>Publication Date: </strong>@book.PublicationDate.DateToString()
                                </span>
                            </div>
                            <div class="mt-2">
                                <span>
                                    <strong>Language: </strong>
                                    <a rel="tag" href="#">@book.Language</a>
                                </span>
                            </div>
                            <div class="mt-2">
                                <span>
                                    <strong>Genre: </strong>
                                    @foreach (Genre g in book.Genre) {
                                        <a rel="tag" href="#">@g.Name</a>
                                    }
                                </span>
                            </div>
                        }
                        <div class="mt-2">
                            <strong>Price: </strong> <span class="amount-old">@item.Price</span>
                        </div>
                        <div class="form-group mt-2">
                            <label>
                                <strong>Quantity: </strong> @item.Quantity
                            </label>
                        </div>
                          <div class="form-group mt-2">
                            <label>
                                <strong>Status: </strong> @status
                            </label>
                        </div>
                        <div class="mt-5">
                            <button class="btn btn-round btn-dark" disabled="@isDisabled" @onclick="(() => AddToShoppingCart(item))">
                                <i class="fa fa-shopping-cart"></i> Add to Shopping Cart
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}

@code {
    [Parameter]
    public int Id { get; set; }

    private int customerId;
    private Item item;
    private Book book;
    private string status;
    private bool isDisabled;

    protected override async Task OnInitializedAsync() {
        item = await itemService.GetItemAsync(Id);
        Console.WriteLine(item.Category.Name);
        if (item.Category.Name.Equals("Book")) {
            book = await itemService.GetBookAsync(Id);
        }
        
        status = EnumHelper.GetDescription(item.Status == ItemStatus.InStock ? ItemStatus.InStock : ItemStatus.OutOfStock);
        SetDisabledState();
        try {
            customerId = int.Parse((await authStateProvider.GetAuthenticationStateAsync()).User.FindFirstValue("Id"));
        } catch (Exception e) {
            customerId = -1;
        }
    }
    
    private void SetDisabledState() {
        if (item.Quantity < 1) {
            item.Status = ItemStatus.OutOfStock;
            isDisabled = true;
        }
    }

    private void AddToShoppingCart(Item itemToAdd) {
        Item i = orderService.ShoppingCart.AddToShoppingCart(itemToAdd);
        if (customerId != -1)
            customerService.AddToShoppingCartAsync(i,customerId);
    }
}