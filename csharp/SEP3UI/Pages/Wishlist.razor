@page "/wishlist"
@using SEP3UI.Data
@using System.Security.Claims
@using SEP3Library.Models
@inject IOrderService orderService
@inject ICustomerService customerService
@inject AuthenticationStateProvider authStateProvider


<div class="container my-4">
    <h2 class="mb-5 text-center">My Wishlist</h2>
    @if (items == null) {
        <em class="text-center">Loading...</em>
    } else if (!items.Any()) {
        <em class="text-center">You have no items in your wishlist!</em>
    } else {
        @foreach (Item item in items) {
            <div class="row mb-5 align-items-center">
                <div class="col-md-4 col-sm-12 row justify-content-center">
                    <img src="@item.ImageName" alt="Image of @item.Name"/>
                </div>
                <div class="col-md-8 col-sm-12 row">
                    <h3 class="col-sm-12 mb-3">@item.Name</h3>
                    <div class="col-md-8 col-sm-12">
                        <ul class="list-unstyled list-inline">
                            <li class="mb-2">
                                <i class="oi oi-heart mr-3" @onclick="@(() => PerformUnfavoriteAsync(item))"/>
                                <a href="">[@item.Category.Name]</a>
                            </li>
                            <li class="mb-2">@item.Description</li>
                            <li>Price: <span class="text-info" style="font-size: 1.5em;">@item.PriceIncludingDiscount DKK</span>
                                @if (item.Discount > 0) {
                                    <span class="ml-2 text-danger">(@item.Discount% OFF)</span>
                                }
                            </li>
                        </ul>
                    </div>
                    <div class="col-md-4 col-sm-12">
                        @if (item.Quantity == 0) {
                            <strong class="text-danger">Out of stock</strong>
                            <button class="btn btn-outline-dark w-100 mt-2" disabled>Add To Cart</button>
                        }
                        else {
                            <strong class="text-success">In stock</strong>
                            <button class="btn btn-outline-primary w-100 mt-2" @onclick="@(() => PerformAddItemToCart(item))">Add To Cart</button>
                        }
                    </div>
                </div>
            </div>
        }
    }
</div>

@code {
    private int customerId;
    private IList<Item> items;
    
    protected override async Task OnInitializedAsync() {
        NavBarEvent.Invoke();
        customerId = int.Parse((await authStateProvider.GetAuthenticationStateAsync()).User.FindFirstValue("Id"));
        items = await customerService.GetCustomerWishlistAsync(customerId);
    }

    private async Task PerformUnfavoriteAsync(Item item) {
        await customerService.RemoveWishlistedItem(customerId, item.Id);
        items.Remove(item);
    }

    private async Task PerformAddItemToCart(Item item) {
        Item added = orderService.ShoppingCart.Add(item);
        
        if (added.Quantity == 1) {
            await customerService.AddToShoppingCartAsync(added, customerId);
        } else {
            await customerService.UpdateShoppingCartAsync(added, added.Id, customerId);
        }
    }
}