@page "/OrderList"
@using SEP3UI.Data
@using SEP3Library.Models
@using SEP3UI.Authentication
@attribute [Authorize(Policy = Policies.IsAdmin)]
@inject IOrderService orderService

<div class="d-flex justify-content-center">
    <div class=" col-9 ">
        <h1>Orders</h1>
        @if (orders == null || !orders.Any()) {
            <p>
                <em>No orders to display</em>
            </p>
        }
        else {
            <table class="table table-striped">
                <thead>
                <tr>
                    <th>Order ID</th>
                    <th>Number of Items</th>
                    <th>Total</th>
                    <th>Customer ID</th>
                    <th>Name</th>
                    <th>Email</th>
                    <th>Address</th>
                    <th>Status</th>
                    <th>Time</th>
                </tr>
                </thead>
                <tbody>
                @foreach (Order order in orders) {
                    <tr @onclick="@(() => View(order.Id))" class="family-row">
                        <td>@order.Id</td>
                        <td>@GetAmount(order)</td>
                        <td>@GetTotal(order)</td>
                        <td>@(order.CustomerId == 0?"Not Registered":order.CustomerId)</td>
                        <td>@order.FirstName @order.LastName</td>
                        <td>@order.Email</td>
                        <td>@order.Address.ToString()</td>
                        <td>@order.OrderStatus.ToString()</td>
                        <td>@order.DateTime.ToString()</td>
                    </tr>
                }
                </tbody>
            </table>
        }
    </div>
</div>
<div class="text-center">
    <button class="btn btn-md btn-dark order-button" style="@hidden" @onclick="LoadMoreAsync">Load more</button>
</div>

@code {
    private IList<Order> orders;
    private int orderIndex;
    private string hidden;
    
    protected override async Task OnInitializedAsync() {
        orderIndex = 0;
        orders = await orderService.GetOrdersAsync(orderIndex);
        hidden = "";
    }

    private async Task LoadMoreAsync() {
        orderIndex++;
        IList<Order> newList = await orderService.GetOrdersAsync(orderIndex);
        if (newList.Count == 0) {
            hidden = "display: none";
            orderIndex--;
        }
        foreach (Order order in newList) {
            orders.Add(order);
        }
    }

    private int GetAmount(Order order) {
        int amount = 0;
        foreach (Item item in order.Items) {
            amount += item.Quantity;
        }
        return amount;
    }

    private double GetTotal(Order order) {
        double price = 0;
        foreach (Item item in order.Items) {
            price += item.Price;
        }
        return price;
    }
    
    private void View(int orderId) {
        
    }
}