@page "/AddItems"
@using SEP3UI.Authentication
@using SEP3Library.Models
@using SEP3UI.Data
@using Microsoft.AspNetCore.Hosting
@using Telerik.OpenAccess.RT.sql
@attribute [Authorize(Policy = Policies.IsAdmin)]
@inject IItemService itemService
@inject IWebHostEnvironment Environment
@inject NavigationManager nav

@if (categories != null) {
    <div class="mt-3">
        <div class="text-center">
            <h2>Add Items</h2>
        </div>
        <select class="form-select" aria-label="Category" @onchange="@((args) => SetSelectedCategory(args))">
            <option selected hidden>Select a category</option>
            @foreach (Category category in categories) {
                <option value="@category.Name">@category.Name</option>
            }
        </select>
        @if (selectedCategory != null) {
            @switch (selectedCategory.Name) {
                case "Book":
                    <BookComponent Category="@selectedCategory"/>
                    break;
                default:
                    <ItemComponent Category="@selectedCategory"/>
                    break;
            }
        }
    </div>
    <div class="text-center">
        @errorMessage
    </div>
   
}

@code {
    private Category selectedCategory;
    private IList<Category> categories;
    private string errorMessage;
    
    protected override async Task OnInitializedAsync() {
        try {
            categories = await itemService.GetCategoriesAsync();
        }
        catch (SQLException e) {
            errorMessage = e.Message;
        }
    }

    private void SetSelectedCategory(ChangeEventArgs args) {
        string catName = args.Value.ToString();
        selectedCategory = categories.FirstOrDefault(c => c.Name.Equals(catName));
        
    }

}

