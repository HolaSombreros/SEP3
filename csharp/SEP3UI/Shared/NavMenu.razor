@using SEP3UI.Authentication
@using System.Collections
@using System.Security.Claims
@using SEP3Library.Models
@using SEP3UI.Data
@inject NavigationManager nav
@inject ICustomerService customerService 
@inject AuthenticationStateProvider authStateProvider

<nav class="navbar navbar-expand-md navbar-dark bg-dark">
    <a class="navbar-brand" href="/">    
        <img src="Images/undercoverslogo.png" alt="Under Covers logo" style="height: 50px"/>
    </a>
    <button class="navbar-toggler ml-auto" @onclick="ToggleNavMenu">
        <span class="navbar-toggler-icon"></span>
    </button>

    <div class="navbar-collapse @NavMenuCssClass">
        <ul class="navbar-nav ml-auto">
            <li class="nav-item">
                <NavLink class="nav-link text-center" href="/ShoppingBasket" @onclick="CollapseDropdownMenus">
                    <span class="oi oi-cart" aria-hidden="true"></span> Cart
                </NavLink>
            </li>
            <AuthorizeView>
                <NotAuthorized>
                    <button class="btn btn-info" @onclick="NavigateToLogin">Login</button>
                </NotAuthorized>
                <Authorized>
                    <li class="nav-item dropdown">
                        <NavLink class="nav-link text-center" @onclick="ToggleNotificationDropdownMenuAsync">
                            <span class="oi oi-bell" aria-hidden="true"></span>
                        </NavLink>
                        @if (!collapseNotificationDropdownMenu) {
                            @if (notifications == null || !notifications.Any()) {
                                <div class="d-block dropdown-menu dropdown-menu-right bg-dark">
                                    <div class="dropdown-item">Loading...</div>
                                </div>
                            }
                            else {
                                <div class="d-block dropdown-menu dropdown-menu-right bg-dark">
                                    @foreach (Notification notification in notifications) {
                                        <div class="dropdown-item">
                                            @notification.Text
                                            @notification.Time
                                        </div>
                                    }
                                    <div class="text-center">
                                        <button class="btn btn-md btn-dark order-button" style="@hidden" @onclick="LoadMoreAsync">Load more</button>
                                    </div>
                                </div>
                            }
                        }
                    </li>
                    <li class="nav-item dropdown">
                        <NavLink class="nav-link dropdown-toggle text-center" @onclick="ToggleAccountDropdownMenu">
                            <span class="oi oi-person" aria-hidden="true"></span> Account
                        </NavLink>
                        @if (!collapseAccountDropdownMenu) {
                            <div class="d-block dropdown-menu dropdown-menu-right bg-dark">
                                <NavLink class="nav-link dropdown-item text-center text-md-left" href="/wishlist" @onclick="CollapseDropdownMenus">
                                    <span class="oi oi-list" aria-hidden="true"></span> My Wishlist
                                </NavLink>
                                <NavLink class="nav-link dropdown-item text-center text-md-left" href="/account" @onclick="CollapseDropdownMenus">
                                    <span class="oi oi-person" aria-hidden="true"></span> My Account
                                </NavLink>
                                <NavLink class="nav-link dropdown-item text-center text-md-left" @onclick="NavigateToLogout">
                                    <span class="oi oi-account-logout" aria-hidden="true"></span> Logout
                                </NavLink>
                            </div>
                        }
                    </li>
                </Authorized>
            </AuthorizeView>
            <AuthorizeView Policy="@Policies.IsAdmin">
                <li class="nav-item dropdown">
                    <NavLink class="nav-link dropdown-toggle text-center" @onclick="ToggleAdminDropdownMenu">
                        <span class="oi oi-cog" aria-hidden="true"></span> Admin
                    </NavLink>
                    @if (!collapseAdminDropdownMenu) {
                        <div class="d-block dropdown-menu dropdown-menu-right bg-dark">
                            <NavLink class="nav-link dropdown-item text-center text-md-left" href="/categories/new" @onclick="CollapseDropdownMenus">
                                <span class="oi oi-plus" aria-hidden="true"></span> Add New Category
                            </NavLink>
                            <NavLink class="nav-link dropdown-item text-center text-md-left" href="/AddItems" @onclick="CollapseDropdownMenus">
                                <span class="oi oi-plus" aria-hidden="true"></span> Add New Item
                            </NavLink>
                            <NavLink class="nav-link dropdown-item text-center text-md-left" href="/OrderList" @onclick="CollapseDropdownMenus">
                                <span class="oi oi-list-rich" aria-hidden="true"></span> Orders
                            </NavLink>
                        </div>
                    }
                </li>
            </AuthorizeView>
        </ul>
    </div>
</nav>
@* <div class="hello"> *@
@* <div class="top_bar" id="bottom_bar"> *@
@*     <div class="container"> *@
@*         <div class="row"> *@
@*             <div class="col d-flex flex-row"> *@
@*                 <div class="top_bar_contact_item"> *@
@*                     <div class="top_bar_icon"><img src="https://res.cloudinary.com/dxfq3iotg/image/upload/v1560918577/phone.png" alt=""></div>+91 9823 132 111 *@
@*                 </div> *@
@*                 <div class="top_bar_contact_item"> *@
@*                     <div class="top_bar_icon"> *@
@*                         <img src="https://res.cloudinary.com/dxfq3iotg/image/upload/v1560918597/mail.png" alt=""> *@
@*                     </div><a href="mailme@undercovers.com">mailme@undercovers.com</a> *@
@*                 </div> *@
@*             </div> *@
@*         </div> *@
@*     </div> *@
@* </div> *@
@* </div> *@

@code {
    private bool collapseNavMenu = true;
    private bool collapseAccountDropdownMenu = true;
    private bool collapseAdminDropdownMenu = true;
    private bool collapseNotificationDropdownMenu = true;

    private int notificationIndex;
    private IList<Notification> notifications;
    private string hidden;
    private int customerId;

    protected override async Task OnInitializedAsync() {
        NavBarEvent.AddAction(Load);
    }
    
    private async void Load() {
        try {
            customerId = int.Parse((await authStateProvider.GetAuthenticationStateAsync()).User.FindFirstValue("Id"));
        } catch (Exception e) {
            customerId = -1;
        }
        notificationIndex = 0;
        if (customerId != -1)
            notifications = await customerService.GetNotificationsAsync(customerId, notificationIndex);
        hidden = "";
    }

    private async Task LoadMoreAsync() {
        notificationIndex++;
        IList<Notification> newList = await customerService.GetNotificationsAsync(customerId, notificationIndex);
        if (newList.Count == 0) {
            hidden = "display: none";
            notificationIndex--;
        }
        foreach (Notification notification in newList) {
            notifications.Add(notification);
        }
    }

    private string NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private void ToggleNavMenu() {
        collapseNavMenu = !collapseNavMenu;
        collapseAccountDropdownMenu = true;
        collapseAdminDropdownMenu = true;
        collapseNotificationDropdownMenu = true;
    }

    private void ToggleAccountDropdownMenu() {
        collapseAccountDropdownMenu = !collapseAccountDropdownMenu;
        collapseAdminDropdownMenu = true;
        collapseNotificationDropdownMenu = true;
    }

    private void ToggleAdminDropdownMenu() {
        collapseAdminDropdownMenu = !collapseAdminDropdownMenu;
        collapseAccountDropdownMenu = true;
        collapseNotificationDropdownMenu = true;
    }
    
    private async void ToggleNotificationDropdownMenuAsync() {
        collapseAdminDropdownMenu = true;
        collapseAccountDropdownMenu = true;
        collapseNotificationDropdownMenu = !collapseNotificationDropdownMenu;
    }

    private void CollapseDropdownMenus() {
        collapseAccountDropdownMenu = true;
        collapseAdminDropdownMenu = true;
        collapseNotificationDropdownMenu = true;
    }

    private void NavigateToLogin() {
        nav.NavigateTo("/login");
    }

    private void NavigateToLogout() {
        CollapseDropdownMenus();
        nav.NavigateTo("/logout");
    }
}